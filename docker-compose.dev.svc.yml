version: "3"

services:
  campaign-engine:
    build:
      context: ./services
      dockerfile: ./campaign-engine/Dockerfile
      args:
        NODE_ENV: development
    volumes:
      - ./services/campaign-engine/src/:/app/src
      - ./services/_shared/:/app/_shared
      - ./logs/campaign-engine/:/app/logs/campaign-engine
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CRON_EXPRESSION=* * * * * # every minute
    depends_on:
      - api
      - mongo
      - rabbitmq
    command: npm run dev

  download-engine:
    build:
      context: ./services
      dockerfile: ./download-engine/Dockerfile
      args:
        NODE_ENV: development
    volumes:
      - ./services/download-engine/src/:/app/src
      - ./services/_shared/:/app/_shared
      - ./shared-file-system/:/app/shared-file-system
      - ./logs/download-engine/:/app/logs/download-engine
      - /app/node_modules
    environment:
      - NODE_ENV=development      
    depends_on:
      - api
      - rabbitmq
    command: npm run dev

  apply-filters-engine:
    build:
      context: ./services
      dockerfile: ./apply-filters-engine/Dockerfile
      args:
        NODE_ENV: development
    volumes:
      - ./services/apply-filters-engine/src/:/app/src
      - ./services/_shared/:/app/_shared
      - ./shared-file-system/:/app/shared-file-system
      - ./logs/apply-filters-engine/:/app/logs/apply-filters-engine
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - api
      - rabbitmq
    command: npm run dev

  publish-engine:
    build:
      context: ./services
      dockerfile: ./publish-engine/Dockerfile
      args:
        NODE_ENV: development
    volumes:
      - ./services/publish-engine/src/:/app/src
      - ./services/_shared/:/app/_shared
      - ./shared-file-system/:/app/shared-file-system
      - ./logs/publish-engine/:/app/logs/publish-engine
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      - api
      - rabbitmq
    command: npm run dev

  cleanup-engine:
    build:
      context: ./services
      dockerfile: ./cleanup-engine/Dockerfile
      args:
        NODE_ENV: development
    volumes:
      - ./services/cleanup-engine/src/:/app/src
      - ./services/_shared/:/app/_shared
      - ./shared-file-system/:/app/shared-file-system
      - ./logs/cleanup-engine/:/app/logs/cleanup-engine
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CRON_EXPRESSION=* * * * * # every minute
    depends_on:
      - api
    command: npm run dev
