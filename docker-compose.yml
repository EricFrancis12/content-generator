version: "3"

services:
  node-app:
    build:
      context: ./services
      dockerfile: ./node-app/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - MONGO_USER=admin
      - MONGO_PASSWORD=mypassword
    depends_on:
      - mongo
      - rabbitmq

  campaign-engine:
    build:
      context: ./services
      dockerfile: ./campaign-engine/Dockerfile
    depends_on:
      - mongo
      - rabbitmq

  download-engine:
    build:
      context: ./services
      dockerfile: ./download-engine/Dockerfile
    depends_on:
      - rabbitmq

  apply-filters-engine:
    build:
      context: ./services
      dockerfile: ./apply-filters-engine/Dockerfile
    depends_on:
      - rabbitmq

  publish-engine:
    build:
      context: ./services
      dockerfile: ./publish-engine/Dockerfile
    env_file:
      - ./services/publish-engine/.env
    depends_on:
      - rabbitmq

  ui:
    depends_on:
      - node-app

  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=mypassword
    volumes:
      - mongo-db:/data/db

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    hostname: "rabbit"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

volumes:
  mongo-db: