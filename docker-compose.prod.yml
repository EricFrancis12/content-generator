
version: "3"

services:
  api:
    build:
      context: ./services
      dockerfile: ./api/Dockerfile
      args:
        NODE_ENV: production
    restart: always
    environment:
      - NODE_ENV=production
      - AUTH_TOKEN=${AUTH_TOKEN}
    command: npm start

  campaign-engine:
    build:
      context: ./services
      dockerfile: ./campaign-engine/Dockerfile
      args:
        NODE_ENV: production
    restart: always
    environment:
      - NODE_ENV=production
    depends_on:
      - api
      - mongo
      - rabbitmq
    command: npm start

  download-engine:
    build:
      context: ./services
      dockerfile: ./download-engine/Dockerfile
      args:
        NODE_ENV: production
    restart: always
    environment:
      - NODE_ENV=production
    volumes:
      - ./shared-file-system/:/app/shared-file-system
    depends_on:
      - api
      - rabbitmq
    command: npm start

  apply-filters-engine:
    build:
      context: ./services
      dockerfile: ./apply-filters-engine/Dockerfile
      args:
        NODE_ENV: production
    restart: always
    environment:
      - NODE_ENV=production
    volumes:
      - ./shared-file-system/:/app/shared-file-system
    depends_on:
      - api
      - rabbitmq
    command: npm start

  publish-engine:
    build:
      context: ./services
      dockerfile: ./publish-engine/Dockerfile
      args:
        NODE_ENV: production
    restart: always
    environment:
      - NODE_ENV=production
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    volumes:
      - ./shared-file-system/:/app/shared-file-system
    depends_on:
      - api
      - rabbitmq
    command: npm start

  cleanup-engine:
    build:
      context: ./services
      dockerfile: ./cleanup-engine/Dockerfile
      args:
        NODE_ENV: production
    restart: always
    environment:
      - NODE_ENV=production
    volumes:
      - ./shared-file-system/:/app/shared-file-system
    depends_on:
      - api
    command: npm start

  ui:
    build:
      context: ./services
      dockerfile: ./ui/Dockerfile.prod
    restart: always
    ports:
      - "3001:80"
