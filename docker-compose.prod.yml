version: "3"

services:
  node-app:
    build:
      context: ./services
      dockerfile: ./node-app/Dockerfile
      args:
        NODE_ENV: production
    environment:
      - NODE_ENV=production
    volumes:
      - shared-file-system:/app/shared-file-system
    command: npm start

  campaign-engine:
    build:
      context: ./services
      dockerfile: ./campaign-engine/Dockerfile
      args:
        NODE_ENV: production
    environment:
      - NODE_ENV=production
    command: npm start

  download-engine:
    build:
      context: ./services
      dockerfile: ./download-engine/Dockerfile
      args:
        NODE_ENV: production
    environment:
      - NODE_ENV=production
    volumes:
      - shared-file-system:/app/shared-file-system
    command: npm start

  apply-filters-engine:
    build:
      context: ./services
      dockerfile: ./apply-filters-engine/Dockerfile
      args:
        NODE_ENV: production
    environment:
      - NODE_ENV=production
    volumes:
      - shared-file-system:/app/shared-file-system
    command: npm start

  publish-engine:
    build:
      context: ./services
      dockerfile: ./publish-engine/Dockerfile
      args:
        NODE_ENV: production
    environment:
      - NODE_ENV=production
    volumes:
      - shared-file-system:/app/shared-file-system
    command: npm start

  cleanup-engine:
    build:
      context: ./services
      dockerfile: ./cleanup-engine/Dockerfile
      args:
        NODE_ENV: production
    environment:
      - NODE_ENV=production
    volumes:
      - shared-file-system:/app/shared-file-system
    command: npm start

  ui:
    build:
      context: ./services/ui
      dockerfile: Dockerfile.prod
    ports:
      - "3001:80"

volumes:
  shared-file-system: